import Head from 'next/head'
import styled from 'styled-components'
import { useState } from 'react'

const Square = styled.div`
  width: 2rem;
  height: 2rem;
  border: 0px solid black;
  text-align: center;
`

const BoardContainer = styled.div`
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  width: 6rem;
  height: 6rem;

  padding: 1rem;

  div:nth-child(2) {
    border-left-width: 1px;
    border-right-width: 1px;
  }
  div:nth-child(4) {
    border-top-width: 1px;
    border-bottom-width: 1px;
  }
  div:nth-child(5) {
    border-width: 1px;
  }
  div:nth-child(6) {
    border-top-width: 1px;
    border-bottom-width: 1px;
  }
  div:nth-child(8) {
    border-left-width: 1px;
    border-right-width: 1px;
  }
`

const Msg = styled.p`
  font-size: 1.5rem;
  text-align: center;
`

export default function Home() {
  return (
    <div>
      <Head>
        <title>Tic Tac Toe</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Board />
    </div>
  )
}

function Board(props) {
  const [board, msg, handleClick] = useTicTacToeLogic(["", "", "", "", "", "", "", "", ""], "X")

  function onClick(e) {
    handleClick(e.target.id)
    console.log(e.target.id)
  }

  return (
    <div>
      <BoardContainer>
        {board.map((value, index) => (
          <Square onClick={onClick} id={index} key={index}>{value}</Square>
        ))}
      </BoardContainer>
      <Msg>{msg}</Msg>
    </div>
  )
}

function useTicTacToeLogic(startBoard, startPlayer) {
  const [state, setState] = useState({
    board: startBoard,
    player: startPlayer,
    msg: `It's ${startPlayer}'s Turn`
  })

  function hasWon(board) {
    if (board[0] !== "" && board[0] === board[1] && board[0] === board[2]) {
      return board[0];
    } else if (
      board[3] !== "" &&
      board[3] === board[4] &&
      board[3] === board[5]
    ) {
      return board[3];
    } else if (
      board[6] !== "" &&
      board[6] === board[7] &&
      board[6] === board[8]
    ) {
      return board[6];
    } else if (
      board[0] !== "" &&
      board[0] === board[3] &&
      board[0] === board[6]
    ) {
      return board[0];
    } else if (
      board[1] !== "" &&
      board[1] === board[4] &&
      board[1] === board[7]
    ) {
      return board[1];
    } else if (
      board[2] !== "" &&
      board[2] === board[5] &&
      board[2] === board[8]
    ) {
      return board[2];
    } else if (
      board[0] !== "" &&
      board[0] === board[4] &&
      board[0] === board[8]
    ) {
      return board[0];
    } else if (
      board[2] !== "" &&
      board[2] === board[4] &&
      board[2] === board[6]
    ) {
      return board[2]
    }
    return ""
  }

  function isFull(board) {
    return (
      board.filter(function (item) {
        return item !== ""
      }).length === 9
    );
  }

  function handleChange(index) {
    console.log({ ...state }, index);
    if (state.board[index] == "" && hasWon(state.board) === "" && isFull(state.board) === false) {
      let stateCopy = {...state};

      stateCopy.board[index] = stateCopy.player

      if (hasWon(stateCopy.board) !== "") {
        stateCopy.msg = `${hasWon(stateCopy.board)} has won!`
      } else if (isFull(stateCopy.board)) {
        stateCopy.msg = "Tie game!"
      } else {
        if (stateCopy.player == "X") {
          stateCopy.player = "O";
          stateCopy.msg = `It's O's Turn`
        } else {
          stateCopy.player = "X";
          stateCopy.msg = `It's X's Turn`
        }
      }
      setState(stateCopy)
    }

  }

  return [state.board, state.msg, handleChange]
}